set -eu

brewupdate(){
  # brew doctor;
  brew prune;
  brew update;
  brew upgrade;
  brew cleanup;
}

gemupdate(){
  gem update;
  gem clean;
}

rvmupdate(){
  rvm get latest;
  rvm get head;
  rvm cleanup all;
}

nodeupdate(){
  nodebrew selfupdate;
  nodebrew clean all;
  npm -g update;
  npm -g cache --force clean;
}

macosupdate(){
  softwareupdate -ia;
}

linuxupdate(){
  sudo apt-get update;
  sudo apt-get upgrade;
  sudo apt-get dist-upgrade;
  sudo apt-get purge;
  sudo apt-get autoremove;
  sudo apt-get autoclean;
}

pipupdate(){
  pip3 install -U pip;
  pip3 freeze --local | cut -d = -f 1 | xargs pip3 install -U;
}

softupdate(){
  brewupdate
  gemupdate
  nodeupdate
  rvmupdate
  pipupdate

  if [[ "${OSTYPE}" =~ ^darwin ]]; then
    # macosupdate
    :;
  elif [[ "${OSTYPE}" =~ ^linux ]]; then
    linuxupdate
  fi
}

# Update software every 12 hours.
run(){
  # 1 time per 12 hours
  local PERIOD=$((60 * 60 * 12))

  # next update time value.
  if [[ "${OSTYPE}" =~ ^darwin ]]; then
    local NEXT_UPDATE_VAL=$(($(gdate +%s) + $PERIOD))
  elif [[ "${OSTYPE}" =~ ^linux ]]; then
    local NEXT_UPDATE_VAL=$(($(date +%s) + $PERIOD))
  fi

  # run softupdate
  softupdate

  echo $NEXT_UPDATE_VAL > $UPDATED_AT_FILE
  if [[ "${OSTYPE}" =~ ^darwin ]]; then
    gecho -e "\e[32mNext update time:\e[m\e[33m" $(gdate -d "@${NEXT_UPDATE_VAL}" "+%F (%a) %T") "\e[m"
  elif [[ "${OSTYPE}" =~ ^linux ]]; then
    echo -e "\e[32mNext update time:\e[m\e[33m" $(date -d "@${NEXT_UPDATE_VAL}" "+%F (%a) %T") "\e[m"
  fi
}

# A file which is record the update time.
UPDATED_AT_FILE=~/.updated_at

if [[ -e $UPDATED_AT_FILE ]]; then
  if [[ "${OSTYPE}" =~ ^darwin ]]; then
    NOW=$(gdate "+%s")
  elif [[ "${OSTYPE}" =~ ^linux ]]; then
    NOW=$(date "+%s")
  fi

  NEXT_UPDATE=$(cat "${UPDATED_AT_FILE}")
  if [[ $NEXT_UPDATE -lt $NOW ]]; then
    run
  else
    if [[ "${OSTYPE}" =~ ^darwin ]]; then
      gecho -e "\e[32mNext update time:\e[m\e[33m" $(gdate -d "@${NEXT_UPDATE}" "+%F (%a) %T") "\e[m"
    elif [[ "${OSTYPE}" =~ ^linux ]]; then
      echo -e "\e[32mNext update time:\e[m\e[33m" $(date -d "@${NEXT_UPDATE}" "+%F (%a) %T") "\e[m"
    fi
  fi
else
  run
fi

exit 0
